<%- include('./partials/header.ejs'); %>


    <div class="manageUser-container">
      <div id="title">
        <h2>Manage Users</h2>
      </div>

      <div class="new-message-container new-user">
        <a href="#" onclick="openModal()">+</a>
      </div>
    
      <div id="users-table">
        <table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Manage</th>
            </tr>
          </thead>
          <tbody id="users-table">
              <% users.forEach((user) => { %>
            <tr id="<%= user._id %>">
              <td class="name">
                 <% if (user.avatar) { %>
                   <img src="./uploads/avatars/<%= user.avatar %>" alt="<%= user.name %>" />
                 <% } else { %>
                   <img src="./images/nophoto.png" alt="<%= user.name %>" />
                 <% } %>
                <span><%= user.name %></span>
              </td>
              <td><%= user.email %></td>
              <td class="manage">
                <img src="./images/edit.svg" alt="Delete" onclick="showUser('<%= user._id %>')" />
                <img src="./images/trash.png" alt="Delete" onclick="deleteUser('<%= user._id %>')" />
              </td>
            </tr>
              <% }); %>
          </tbody>
        </table>
      </div>
    </div>

    <div class="modal-wrapper" id="add-user-modal">
      <div class="modal">
        <a href="#" onclick="closeModal()" class="modal-close">+</a>
        <div class="modal-title">
          <h2>Create New User</h2>
        </div>
        <div class="modal-body">
          <form id="add-user-form" method="post" enctype="multipart/form-data" action="/users">
            <input type="text" placeholder="enter name" name="name" />
            <p class="error ">This is error</p>
            <input type="text" placeholder="enter email" name="email" />
            <p class="error ">This is error</p>
            <input type="text" placeholder="enter mobile" name="mobile" />
            <p class="error ">This is error</p>

            <input
              type="password"
              placeholder="enter password"
              name="password"
            />
            <p class="error ">This is error</p>
             
            <img src="./images/nophoto.png" height="100" width="100" id="avatar" alt="">
            <input type="file" name="avatar" />
            <p class="error ">This is error</p>

            <input type="submit" value="Submit" />
           

          </form>
        </div>
      </div>
    </div>
    <script>
      const modal = document.querySelector("#add-user-modal");
      const form = document.querySelector("#add-user-form");

      const successToast = Toastify({
        text: "User Added Successfully",
        duration: 3000,
        destination: "https://github.com/apvarun/toastify-js",
        newWindow: true,
        close: true,
        gravity: "top",
        position: "right",
        stopOnFocus: true,
        style: {
          background: "linear-gradient(to right, #00b3bd, #52d794)",
        },
      });

        const deleteToast = Toastify({
            text: "User was deleted successfully!",
            duration: 3000,
        });

      function closeModal() {
        modal.style.display = "none";
      }
      function openModal() {
        modal.style.display = "block";
         const errorsPlaceholder = form.querySelectorAll(".error");
        errorsPlaceholder.forEach((element) => {
          element.textContent = "";
          element.classList.remove("show");
        });
      }
      form.onsubmit = async function (e) {
        e.preventDefault();

        const errorsPlaceholder = form.querySelectorAll(".error");
        errorsPlaceholder.forEach((element) => {
          element.textContent = "";
          element.classList.remove("show");
        });
        

        const formData = new FormData(form);
        const response = await fetch("/users", {
          method: "POST",
          body: formData,
        });

        let result = await response.json();

        console.log(result);
        
        
        if(result.errors){
           Object.keys(result.errors).forEach((fieldName) => {
              const input = form.querySelector(`[name=${fieldName}]`);
              if(input){
                const errorElement = input.nextElementSibling;
                errorElement.classList.add("show");
                errorElement.textContent = result.errors[fieldName].msg;
              }
              
   
            });
        }else{
          successToast.showToast();
          form.reset();
          closeModal();     
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }

      };
   
   
    // delete user function
        async function deleteUser(userId) {
            
          let conf = confirm("Are you sure you want to delete this user?");
          if(!conf){
            return;
          }

            let response = await fetch(`/users/${userId}`, {
                method: "DELETE",
            });

            let result = await response.json();

            if (result.errors) {
                deleteErrorToast.showToast();
            } else {
                deleteToast.showToast();
                document.getElementById(userId).remove();
            }
        }
        async function showUser(userId) {
            
             openModal();

            let response = await fetch(`/users/${userId}`, {
                method: "get",
            });

            let result = await response.json();

            console.log(result);

            form.querySelector("[name=name]").value = result.user.name;
            form.querySelector("[name=email]").value = result.user.email;
            form.querySelector("[name=mobile]").value = result.user.mobile;
            form.querySelector("[name=password]").value = result.user.password;
            form.querySelector("#avatar").src = './uploads/avatars/'+result.user.avatar;
        }
   
   </script>

    
<%- include('./partials/footer.ejs'); %>